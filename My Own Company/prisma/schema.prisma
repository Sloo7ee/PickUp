generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}
  
model Father {
  id String @id @default(uuid())
  name String
  username String @unique
  password String 
  phonenumber String @unique
  son Son[]
  role Role
}

model Son {
  id String @id @default(uuid())
  name String
  username String 
  yearofbrith String
  father_username String
  father Father @relation(fields: [father_username], references: [username])
  teacher_username String?
  teacher Teacher? @relation(fields: [teacher_username], references: [username])
  class_name String?
  class Class? @relation(fields: [class_name], references: [name])
  callout Callout[]
  role Role

  @@index([father_username])
  @@index([teacher_username])
  @@index([class_name])
}



model Teacher {
    id String @id @default(uuid())
    name String
    username String @unique
    password String
    class_name String
    class Class @relation(fields: [class_name], references: [name])
    role Role
    studnets Son[]
    callout Callout[]

    @@index([class_name])
}

model Class {
  id String @id @default(uuid())
  name String @unique
  students Son[]
 
  teacher Teacher[]
  callout Callout[]
}



enum Status {
  waiting
  sendout
  
}

model Callout {
  name String @unique
  son_id String
  Son Son @relation(fields: [son_id], references: [id])
  teacher_id String
  teacher Teacher @relation(fields: [teacher_id], references: [id])
  class_id String
  class Class @relation(fields: [class_id], references: [id])
  Status Status
  role Role

  @@index([son_id])
  @@index([teacher_id])
  @@index([class_id])
}


model Admin {
  id String @id @default(uuid())
  name String 
  username String @unique
  role Role
  password String
}
enum Role {
  FATHER
  SON
  TEACHER
  ADMIN
}
